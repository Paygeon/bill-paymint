"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_moonpay_moonpay-react_dist_index_js"],{

/***/ "(app-pages-browser)/../node_modules/@moonpay/moonpay-react/dist/index.js":
/*!************************************************************!*\
  !*** ../node_modules/@moonpay/moonpay-react/dist/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MoonPayBuyWidget: function() { return /* binding */ MoonPayBuyWidget; },\n/* harmony export */   MoonPayConsumerKycWidget: function() { return /* binding */ MoonPayConsumerKycWidget; },\n/* harmony export */   MoonPayContext: function() { return /* binding */ MoonPayContext; },\n/* harmony export */   MoonPayFiatBalanceDepositWidget: function() { return /* binding */ MoonPayFiatBalanceDepositWidget; },\n/* harmony export */   MoonPayFiatBalanceWithdrawWidget: function() { return /* binding */ MoonPayFiatBalanceWithdrawWidget; },\n/* harmony export */   MoonPayNftCheckoutWidget: function() { return /* binding */ MoonPayNftCheckoutWidget; },\n/* harmony export */   MoonPayNftClaimWidget: function() { return /* binding */ MoonPayNftClaimWidget; },\n/* harmony export */   MoonPayProvider: function() { return /* binding */ MoonPayProvider; },\n/* harmony export */   MoonPaySellWidget: function() { return /* binding */ MoonPaySellWidget; },\n/* harmony export */   MoonPaySwapWidget: function() { return /* binding */ MoonPaySwapWidget; },\n/* harmony export */   MoonPaySwapsCustomerSetupWidget: function() { return /* binding */ MoonPaySwapsCustomerSetupWidget; },\n/* harmony export */   MoonPayTopUpLedgerWidget: function() { return /* binding */ MoonPayTopUpLedgerWidget; },\n/* harmony export */   MoonPayTransactionTrackerWidget: function() { return /* binding */ MoonPayTransactionTrackerWidget; },\n/* harmony export */   MoonPayWithdrawLedgerWidget: function() { return /* binding */ MoonPayWithdrawLedgerWidget; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/../node_modules/next/dist/compiled/react/jsx-runtime.js\");\n// src/components/MoonPayBuyWidget.tsx\n\n\n// src/constants.ts\nvar MOONPAY_WIDGET_CONTAINER_ID = \"moonpay-react-sdk-embedded-frame\";\n\n// src/helpers.ts\nvar getBuyConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature\n}) => {\n  const {\n    // params\n    currencyCode,\n    defaultCurrencyCode,\n    walletAddress,\n    walletAddressTag,\n    walletAddresses,\n    walletAddressTags,\n    colorCode,\n    theme,\n    themeId,\n    language,\n    baseCurrencyCode,\n    baseCurrencyAmount,\n    quoteCurrencyAmount,\n    lockAmount,\n    email,\n    externalTransactionId,\n    externalCustomerId,\n    paymentMethod,\n    redirectURL,\n    showAllCurrencies,\n    showOnlyCurrencies,\n    showWalletAddressForm,\n    unsupportedRegionRedirectUrl,\n    skipUnsupportedRegionScreen,\n    baseOrigin,\n    // handlers\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh,\n    // other\n    overlayNode\n  } = props;\n  const params = {\n    apiKey,\n    signature,\n    currencyCode,\n    defaultCurrencyCode,\n    walletAddress,\n    walletAddressTag,\n    walletAddresses,\n    walletAddressTags,\n    colorCode,\n    theme,\n    themeId,\n    language,\n    baseCurrencyCode,\n    baseCurrencyAmount,\n    quoteCurrencyAmount,\n    lockAmount,\n    email,\n    externalTransactionId,\n    externalCustomerId,\n    paymentMethod,\n    redirectURL,\n    showAllCurrencies,\n    showOnlyCurrencies,\n    showWalletAddressForm,\n    unsupportedRegionRedirectUrl,\n    skipUnsupportedRegionScreen,\n    baseOrigin\n  };\n  const handlers = {\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"buy\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`,\n    overlayNode\n  };\n};\nvar getSellConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature\n}) => {\n  const {\n    // params\n    quoteCurrencyCode,\n    defaultCurrencyCode,\n    defaultBaseCurrencyCode,\n    walletAddress,\n    walletAddressTag,\n    walletAddresses,\n    walletAddressTags,\n    colorCode,\n    theme,\n    themeId,\n    language,\n    baseCurrencyCode,\n    baseCurrencyAmount,\n    quoteCurrencyAmount,\n    lockAmount,\n    email,\n    externalTransactionId,\n    externalCustomerId,\n    paymentMethod,\n    redirectURL,\n    showAllCurrencies,\n    showOnlyCurrencies,\n    showWalletAddressForm,\n    unsupportedRegionRedirectUrl,\n    skipUnsupportedRegionScreen,\n    mpWalletId,\n    baseOrigin,\n    // handlers\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    apiKey,\n    signature,\n    quoteCurrencyCode,\n    defaultCurrencyCode,\n    defaultBaseCurrencyCode,\n    walletAddress,\n    walletAddressTag,\n    walletAddresses,\n    walletAddressTags,\n    colorCode,\n    theme,\n    themeId,\n    language,\n    baseCurrencyCode,\n    baseCurrencyAmount,\n    quoteCurrencyAmount,\n    lockAmount,\n    email,\n    externalTransactionId,\n    externalCustomerId,\n    paymentMethod,\n    redirectURL,\n    showAllCurrencies,\n    showOnlyCurrencies,\n    showWalletAddressForm,\n    unsupportedRegionRedirectUrl,\n    skipUnsupportedRegionScreen,\n    mpWalletId,\n    baseOrigin\n  };\n  const handlers = {\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"sell\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getSwapsCustomerSetupConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment\n}) => {\n  const {\n    amount,\n    amountCurrencyCode,\n    theme,\n    themeId,\n    externalCustomerId,\n    baseOrigin,\n    // handlers\n    onAuthToken,\n    onLogin,\n    onInitiateDeposit,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    onKmsWalletsCreated,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    apiKey,\n    amount,\n    amountCurrencyCode,\n    theme,\n    themeId,\n    externalCustomerId,\n    baseOrigin\n  };\n  const handlers = {\n    onAuthToken,\n    onLogin,\n    onInitiateDeposit,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    onKmsWalletsCreated,\n    onTransactionCompleted,\n    onUnsupportedRegion\n  };\n  return {\n    flow: \"swapsCustomerSetup\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getConsumerKycConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment\n}) => {\n  const {\n    amount,\n    amountCurrencyCode,\n    theme,\n    themeId,\n    baseOrigin,\n    // handlers\n    onLogin,\n    onInitiateDeposit,\n    onConsumerKycComplete,\n    onKmsWalletsCreated,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onCloseOverlay,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    apiKey,\n    amount,\n    amountCurrencyCode,\n    theme,\n    themeId,\n    baseOrigin\n  };\n  const handlers = {\n    onLogin,\n    onInitiateDeposit,\n    onConsumerKycComplete,\n    onKmsWalletsCreated,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onCloseOverlay\n  };\n  return {\n    flow: \"consumerKyc\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getNftConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature\n}) => {\n  const {\n    // params\n    contractAddress,\n    tokenId,\n    listingId,\n    externalTransactionId,\n    baseCurrencyCode,\n    redirectURL,\n    walletAddress,\n    subPartnerName,\n    metadata,\n    dynamicAssetInfo,\n    sellType,\n    email,\n    quantity,\n    baseOrigin,\n    // handlers\n    onAuthToken,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    apiKey,\n    signature,\n    contractAddress,\n    tokenId,\n    listingId,\n    externalTransactionId,\n    baseCurrencyCode,\n    redirectURL,\n    walletAddress,\n    subPartnerName,\n    metadata,\n    dynamicAssetInfo,\n    sellType,\n    email,\n    quantity,\n    baseOrigin\n  };\n  const handlers = {\n    onAuthToken,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"nft\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getClaimConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature\n}) => {\n  const {\n    contractId,\n    tokenId,\n    initialScreen,\n    // handlers\n    onAuthToken,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onCloseOverlay,\n    onTransactionCreated,\n    baseOrigin,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    apiKey,\n    signature,\n    contractId,\n    tokenId,\n    initialScreen,\n    baseOrigin\n  };\n  const handlers = {\n    onAuthToken,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"claim\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getTopUpLedgerConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature\n}) => {\n  const {\n    // params\n    externalCustomerId,\n    theme,\n    themeId,\n    currencyCode,\n    baseOrigin,\n    // handlers\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    apiKey,\n    signature,\n    externalCustomerId,\n    theme,\n    themeId,\n    currencyCode,\n    baseOrigin\n  };\n  const handlers = {\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"topup\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getFiatBalanceDepositConfigFromProps = ({\n  props,\n  debug,\n  environment\n}) => {\n  const {\n    theme,\n    themeId,\n    baseOrigin,\n    // handlers\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    theme,\n    themeId,\n    baseOrigin\n  };\n  const handlers = {\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"fiatBalanceDeposit\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getFiatBalanceWithdrawConfigFromProps = ({\n  props,\n  debug,\n  environment\n}) => {\n  const {\n    theme,\n    themeId,\n    baseOrigin,\n    // handlers\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    theme,\n    themeId,\n    baseOrigin\n  };\n  const handlers = {\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"fiatBalanceWithdraw\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getWithdrawLedgerConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature\n}) => {\n  const {\n    // params\n    externalCustomerId,\n    theme,\n    themeId,\n    baseCurrencyCode,\n    baseOrigin,\n    // handlers\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    apiKey,\n    signature,\n    externalCustomerId,\n    theme,\n    themeId,\n    baseCurrencyCode,\n    baseOrigin\n  };\n  const handlers = {\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"withdraw\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getSwapConfigFromProps = ({\n  props,\n  apiKey,\n  debug,\n  environment,\n  signature\n}) => {\n  const {\n    // params\n    walletAddress,\n    walletAddressTag,\n    refundWalletAddress,\n    baseCurrencyCode,\n    baseCurrencyAmount,\n    quoteCurrencyCode,\n    quoteCurrencyAmount,\n    colorCode,\n    theme,\n    themeId,\n    externalCustomerId,\n    baseOrigin,\n    // handlers\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    apiKey,\n    signature,\n    walletAddress,\n    walletAddressTag,\n    refundWalletAddress,\n    baseCurrencyCode,\n    baseCurrencyAmount,\n    quoteCurrencyCode,\n    quoteCurrencyAmount,\n    colorCode,\n    theme,\n    themeId,\n    externalCustomerId,\n    baseOrigin\n  };\n  const handlers = {\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"swap\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    useWarnBeforeRefresh,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`\n  };\n};\nvar getTransactionTrackerConfigFromProps = ({\n  props,\n  debug,\n  environment\n}) => {\n  const {\n    // params\n    transactionId,\n    colorCode,\n    theme,\n    themeId,\n    baseOrigin,\n    // handlers\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated,\n    // auth\n    auth,\n    useWarnBeforeRefresh\n  } = props;\n  const params = {\n    transactionId,\n    colorCode,\n    theme,\n    themeId,\n    baseOrigin\n  };\n  const handlers = {\n    onAuthToken,\n    onInitiateDeposit,\n    onKmsWalletsCreated,\n    onLogin,\n    onTransactionCompleted,\n    onUnsupportedRegion,\n    onSwapsCustomerSetupComplete,\n    onCloseOverlay,\n    onTransactionCreated\n  };\n  return {\n    flow: \"transactionTracker\",\n    variant: props.variant,\n    environment,\n    params,\n    debug,\n    handlers,\n    auth,\n    containerNodeSelector: `#${MOONPAY_WIDGET_CONTAINER_ID}`,\n    useWarnBeforeRefresh\n  };\n};\n\n// ../js-sdk/src/loader.ts\nvar scriptLoadingStatus = {\n  isLoading: false,\n  isLoaded: false,\n  startTime: 0\n};\nasync function loadMoonPay(version = \"v1\") {\n  return new Promise((resolve, reject) => {\n    const scriptSrc = `https://static.moonpay.com/web-sdk/${version}/moonpay-web-sdk.min.js`;\n    const existingScript = document.querySelector(`script[src=\"${scriptSrc}\"]`);\n    if (existingScript) {\n      if (scriptLoadingStatus.isLoaded) {\n        resolve(window.MoonPayWebSdk?.init);\n      } else if (scriptLoadingStatus.isLoading) {\n        const elapsedTime = Date.now() - scriptLoadingStatus.startTime;\n        if (elapsedTime > 1e4) {\n          reject(new Error(\"Loading MoonPayWebSdk script timed out.\"));\n        } else {\n          setTimeout(() => resolve(loadMoonPay(version)), 100);\n        }\n      }\n      return;\n    }\n    scriptLoadingStatus.isLoading = true;\n    scriptLoadingStatus.startTime = Date.now();\n    const script = document.createElement(\"script\");\n    script.async = true;\n    script.src = scriptSrc;\n    script.addEventListener(\"load\", () => {\n      scriptLoadingStatus.isLoading = false;\n      scriptLoadingStatus.isLoaded = true;\n      resolve(window.MoonPayWebSdk?.init);\n    });\n    script.addEventListener(\"error\", () => {\n      scriptLoadingStatus.isLoading = false;\n      scriptLoadingStatus.isLoaded = false;\n      reject(new Error(\"Failed to load MoonPayWebSdk script.\"));\n    });\n    document.body.appendChild(script);\n  });\n}\n\n// src/components/MoonPayProvider.tsx\n\n\n// ../common/src/environment.ts\nfunction getEnvironmentFromApiKey(apiKey) {\n  return apiKey.startsWith(\"pk_live\") ? \"production\" : \"sandbox\";\n}\n\n// ../common/src/Logger.ts\nvar NOOP = () => void 0;\nvar noopLogger = {\n  info: NOOP,\n  warn: NOOP,\n  error: NOOP\n};\nvar Logger = class _Logger {\n  prefix;\n  logger;\n  constructor({\n    logger,\n    prefix\n  }) {\n    this.logger = logger;\n    this.prefix = prefix ?? [\"Logger\"];\n  }\n  if(condition) {\n    return condition ? this : new _Logger({ logger: noopLogger });\n  }\n  info(...data) {\n    this.logger.info(`[${this.prefix}]`, ...data);\n  }\n  warn(...data) {\n    this.logger.warn(`[${this.prefix}]`, ...data);\n  }\n  error(...data) {\n    this.logger.error(`[${this.prefix}]`, ...data);\n  }\n};\n\n// ../common/src/react/useHasOverflow.tsx\n\n\n// ../common/src/react/useIsMounted.tsx\n\n\n// ../common/src/react/useRenderCount.ts\n\n\n// ../common/src/react/useScript.ts\n\n\n// ../common/src/uuid.ts\nvar uuidV4 = typeof window.crypto !== \"undefined\" && typeof window.crypto.getRandomValues !== \"undefined\" ? () => {\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(\n    /[018]/g,\n    (c) => (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n  );\n} : () => {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n    const r = Math.random() * 16 | 0;\n    const v = c === \"x\" ? r : r & 3 | 8;\n    return v.toString(16);\n  });\n};\n\n// src/components/MoonPayProvider.tsx\n\nvar MoonPayContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n  apiKey: \"\",\n  environment: \"sandbox\",\n  debug: false\n});\nvar MoonPayProvider = ({\n  children,\n  apiKey,\n  debug = false\n}) => {\n  const environment = getEnvironmentFromApiKey(apiKey);\n  const [contextState, setContextState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n    apiKey,\n    environment,\n    debug\n  });\n  const load = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async () => {\n    const moonPay = await loadMoonPay();\n    setContextState((state) => ({ ...state, init: moonPay }));\n  }, [setContextState]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!contextState.init)\n      load();\n  }, [load, contextState.init]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MoonPayContext.Provider, { value: contextState, children });\n};\n\n// src/useSdk.tsx\n\n\n// src/logger.ts\nvar Logger2 = class extends Logger {\n  constructor() {\n    super({ logger: console, prefix: [\"MoonPay React SDK\"] });\n  }\n};\n\n// src/useSdk.tsx\nvar useSdk = (config, visible, onUrlSignatureRequested) => {\n  const sdk = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const { init, debug } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const logger = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Logger2().if(debug || false));\n  const handleUpdateSignatureAndShow = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async () => {\n    if (!sdk.current) {\n      return;\n    }\n    if (!onUrlSignatureRequested && (\"walletAddress\" in config || \"walletAddresses\" in config)) {\n      logger.current.warn(\n        \"You must provide an `onUrlSignatureRequested` function to sign the URL when using the `walletAddress` or `walletAddresses` prop\"\n      );\n    }\n    if (onUrlSignatureRequested) {\n      const url = sdk.current.generateUrlForSigning();\n      try {\n        const updatedSignature = await onUrlSignatureRequested?.(url);\n        if (!updatedSignature) {\n          return;\n        }\n        sdk.current?.updateSignature(updatedSignature);\n      } catch (e) {\n        logger.current.error(\n          \"Something went wrong calling the provided `onUrlSignatureRequested` function:\",\n          e\n        );\n      }\n    }\n    if (visible) {\n      sdk.current?.show();\n    }\n  }, [onUrlSignatureRequested, visible, config]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (sdk.current) {\n      sdk.current.close();\n    }\n    const newSdk = init?.(config) || null;\n    sdk.current = newSdk;\n    handleUpdateSignatureAndShow();\n  }, [init, config, handleUpdateSignatureAndShow]);\n};\n\n// src/components/MoonPayWidget.tsx\n\nvar defaultStyles = {\n  width: \"424px\",\n  height: \"576px\",\n  margin: \"32px 28px 32px 28px\",\n  border: \"1px solid #E5E7EB\",\n  borderRadius: \"16px\",\n  overflow: \"hidden\"\n};\nfunction MoonPayWidget({\n  config,\n  onUrlSignatureRequested,\n  visible = true,\n  className,\n  style\n}) {\n  useSdk(config, visible, onUrlSignatureRequested);\n  if (visible) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n      \"div\",\n      {\n        id: MOONPAY_WIDGET_CONTAINER_ID,\n        className,\n        style: config.variant === \"embedded\" ? {\n          ...defaultStyles,\n          ...style\n        } : void 0\n      }\n    );\n  }\n  return null;\n}\n\n// src/components/MoonPayBuyWidget.tsx\n\nfunction MoonPayBuyWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getBuyConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: props.signature || \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPayConsumerKycWidget.tsx\n\n\nfunction MoonPayConsumerKycWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getConsumerKycConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPayNftCheckoutWidget.tsx\n\n\nfunction MoonPayNftCheckoutWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getNftConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: props.signature || \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPayNftClaimWidget.tsx\n\n\nfunction MoonPayNftClaimWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getClaimConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: props.signature || \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPaySellWidget.tsx\n\n\nfunction MoonPaySellWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getSellConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: props.signature || \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPaySwapsCustomerSetupWidget.tsx\n\n\nfunction MoonPaySwapsCustomerSetupWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getSwapsCustomerSetupConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPaySwapWidget.tsx\n\n\nfunction MoonPaySwapWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getSwapConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: props.signature || \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPayTopUpLedgerWidget.tsx\n\n\nfunction MoonPayTopUpLedgerWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getTopUpLedgerConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: props.signature || \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPayTransactionTrackerWidget.tsx\n\n\nfunction MoonPayTransactionTrackerWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getTransactionTrackerConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPayWithdrawLedgerWidget.tsx\n\n\nfunction MoonPayWithdrawLedgerWidget(props) {\n  const { apiKey, environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getWithdrawLedgerConfigFromProps({\n      props,\n      apiKey,\n      environment,\n      debug: false,\n      signature: props.signature || \"\"\n    }),\n    [props, apiKey, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPayFiatBalanceDepositWidget.tsx\n\n\nfunction MoonPayFiatBalanceDepositWidget(props) {\n  const { environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getFiatBalanceDepositConfigFromProps({\n      props,\n      environment,\n      debug: false\n    }),\n    [props, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n// src/components/MoonPayFiatBalanceWithdrawWidget.tsx\n\n\nfunction MoonPayFiatBalanceWithdrawWidget(props) {\n  const { environment } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MoonPayContext);\n  const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => getFiatBalanceWithdrawConfigFromProps({\n      props,\n      environment,\n      debug: false\n    }),\n    [props, environment]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    MoonPayWidget,\n    {\n      config,\n      visible: props.visible,\n      onUrlSignatureRequested: props.onUrlSignatureRequested,\n      className: props.className,\n      style: props.style\n    }\n  );\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/../node_modules/@moonpay/moonpay-react/dist/index.js\n"));

/***/ })

}]);