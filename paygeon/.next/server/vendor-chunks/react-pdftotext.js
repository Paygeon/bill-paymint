"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-pdftotext";
exports.ids = ["vendor-chunks/react-pdftotext"];
exports.modules = {

/***/ "(ssr)/../node_modules/react-pdftotext/dist/index.js":
/*!*****************************************************!*\
  !*** ../node_modules/react-pdftotext/dist/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst react_pdf_1 = __webpack_require__(/*! react-pdf */ \"(ssr)/../node_modules/react-pdf/dist/cjs/index.js\");\n// Path to the pdf.worker.js file\nreact_pdf_1.pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${react_pdf_1.pdfjs.version}/pdf.worker.js`;\n/**\n * Extracts text content from a PDF file.\n * @param {File | Blob | MediaSource} file - The PDF file to extract text from.\n * @returns {Promise<string>} A promise that resolves with the extracted text content.\n */\nconst pdfToText = (file) => __awaiter(void 0, void 0, void 0, function* () {\n    // Create a blob URL for the PDF file\n    const blobUrl = URL.createObjectURL(file);\n    // Load the PDF file\n    const loadingTask = react_pdf_1.pdfjs.getDocument(blobUrl);\n    let extractedText = \"\";\n    let hadParsingError = false;\n    try {\n        const pdf = yield loadingTask.promise;\n        const numPages = pdf.numPages;\n        // Iterate through each page and extract text\n        for (let pageNumber = 1; pageNumber <= numPages; pageNumber++) {\n            const page = yield pdf.getPage(pageNumber);\n            const textContent = yield page.getTextContent();\n            const pageText = textContent.items\n                .map((item) => (\"str\" in item ? item.str : \"\"))\n                .join(\" \");\n            extractedText += pageText;\n        }\n    }\n    catch (error) {\n        hadParsingError = true;\n        console.error(\"Error extracting text from PDF:\", error);\n    }\n    // Clean up the blob URL\n    URL.revokeObjectURL(blobUrl);\n    // Free memory from loading task\n    loadingTask.destroy();\n    if (!hadParsingError) {\n        return extractedText;\n    }\n});\nexports[\"default\"] = pdfToText;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXBkZnRvdGV4dC9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0IsbUJBQU8sQ0FBQyxvRUFBVztBQUN2QztBQUNBLDZGQUE2RiwwQkFBMEI7QUFDdkg7QUFDQTtBQUNBLFdBQVcsMkJBQTJCO0FBQ3RDLGFBQWEsaUJBQWlCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyx3QkFBd0I7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXBkZnRvdGV4dC9kaXN0L2luZGV4LmpzPzhhYmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHJlYWN0X3BkZl8xID0gcmVxdWlyZShcInJlYWN0LXBkZlwiKTtcbi8vIFBhdGggdG8gdGhlIHBkZi53b3JrZXIuanMgZmlsZVxucmVhY3RfcGRmXzEucGRmanMuR2xvYmFsV29ya2VyT3B0aW9ucy53b3JrZXJTcmMgPSBgLy9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvcGRmLmpzLyR7cmVhY3RfcGRmXzEucGRmanMudmVyc2lvbn0vcGRmLndvcmtlci5qc2A7XG4vKipcbiAqIEV4dHJhY3RzIHRleHQgY29udGVudCBmcm9tIGEgUERGIGZpbGUuXG4gKiBAcGFyYW0ge0ZpbGUgfCBCbG9iIHwgTWVkaWFTb3VyY2V9IGZpbGUgLSBUaGUgUERGIGZpbGUgdG8gZXh0cmFjdCB0ZXh0IGZyb20uXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmc+fSBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSBleHRyYWN0ZWQgdGV4dCBjb250ZW50LlxuICovXG5jb25zdCBwZGZUb1RleHQgPSAoZmlsZSkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgLy8gQ3JlYXRlIGEgYmxvYiBVUkwgZm9yIHRoZSBQREYgZmlsZVxuICAgIGNvbnN0IGJsb2JVcmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGZpbGUpO1xuICAgIC8vIExvYWQgdGhlIFBERiBmaWxlXG4gICAgY29uc3QgbG9hZGluZ1Rhc2sgPSByZWFjdF9wZGZfMS5wZGZqcy5nZXREb2N1bWVudChibG9iVXJsKTtcbiAgICBsZXQgZXh0cmFjdGVkVGV4dCA9IFwiXCI7XG4gICAgbGV0IGhhZFBhcnNpbmdFcnJvciA9IGZhbHNlO1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHBkZiA9IHlpZWxkIGxvYWRpbmdUYXNrLnByb21pc2U7XG4gICAgICAgIGNvbnN0IG51bVBhZ2VzID0gcGRmLm51bVBhZ2VzO1xuICAgICAgICAvLyBJdGVyYXRlIHRocm91Z2ggZWFjaCBwYWdlIGFuZCBleHRyYWN0IHRleHRcbiAgICAgICAgZm9yIChsZXQgcGFnZU51bWJlciA9IDE7IHBhZ2VOdW1iZXIgPD0gbnVtUGFnZXM7IHBhZ2VOdW1iZXIrKykge1xuICAgICAgICAgICAgY29uc3QgcGFnZSA9IHlpZWxkIHBkZi5nZXRQYWdlKHBhZ2VOdW1iZXIpO1xuICAgICAgICAgICAgY29uc3QgdGV4dENvbnRlbnQgPSB5aWVsZCBwYWdlLmdldFRleHRDb250ZW50KCk7XG4gICAgICAgICAgICBjb25zdCBwYWdlVGV4dCA9IHRleHRDb250ZW50Lml0ZW1zXG4gICAgICAgICAgICAgICAgLm1hcCgoaXRlbSkgPT4gKFwic3RyXCIgaW4gaXRlbSA/IGl0ZW0uc3RyIDogXCJcIikpXG4gICAgICAgICAgICAgICAgLmpvaW4oXCIgXCIpO1xuICAgICAgICAgICAgZXh0cmFjdGVkVGV4dCArPSBwYWdlVGV4dDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgaGFkUGFyc2luZ0Vycm9yID0gdHJ1ZTtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGV4dHJhY3RpbmcgdGV4dCBmcm9tIFBERjpcIiwgZXJyb3IpO1xuICAgIH1cbiAgICAvLyBDbGVhbiB1cCB0aGUgYmxvYiBVUkxcbiAgICBVUkwucmV2b2tlT2JqZWN0VVJMKGJsb2JVcmwpO1xuICAgIC8vIEZyZWUgbWVtb3J5IGZyb20gbG9hZGluZyB0YXNrXG4gICAgbG9hZGluZ1Rhc2suZGVzdHJveSgpO1xuICAgIGlmICghaGFkUGFyc2luZ0Vycm9yKSB7XG4gICAgICAgIHJldHVybiBleHRyYWN0ZWRUZXh0O1xuICAgIH1cbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gcGRmVG9UZXh0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/react-pdftotext/dist/index.js\n");

/***/ })

};
;